import{_ as n,p as o,q as r,Q as a,t as s,v as t,a1 as i}from"./framework-344bb0e4.js";const p={},l={id:"frontmatter-title-for-debug",tabindex:"-1"},c=a("a",{class:"header-anchor",href:"#frontmatter-title-for-debug","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; ast (pipeline) --json --minify</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>pipeline</code>: the pipeline to print the ast for</li><li><code>--json</code> <code>(-j)</code>: serialize to json</li><li><code>--minify</code> <code>(-m)</code>: minify the nuon or json output</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Print the ast of a string</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ast <span class="token string">&#39;hello&#39;</span>

</code></pre></div><p>Print the ast of a pipeline</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ast <span class="token string">&#39;ls | where name =~ README&#39;</span>

</code></pre></div><p>Print the ast of a pipeline with an error</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ast <span class="token string">&#39;for x in 1..10 { echo $x &#39;</span>

</code></pre></div><p>Print the ast of a pipeline with an error, as json, in a nushell table</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ast <span class="token string">&#39;for x in 1..10 { echo $x &#39;</span> <span class="token parameter variable">--json</span> <span class="token operator">|</span> get block <span class="token operator">|</span> from json

</code></pre></div><p>Print the ast of a pipeline with an error, as json, minified</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> ast <span class="token string">&#39;for x in 1..10 { echo $x &#39;</span> <span class="token parameter variable">-j</span> <span class="token parameter variable">-m</span>

</code></pre></div>`,15);function g(e,u){return o(),r("div",null,[a("h1",l,[c,s(),a("code",null,t(e.$frontmatter.title),1),s(" for debug")]),a("div",d,t(e.$frontmatter.debug),1),h])}const m=n(p,[["render",g],["__file","ast.html.vue"]]);export{m as default};
